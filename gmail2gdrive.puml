@startuml gmail2gdrive

' For more information about plantuml see:
' - http://plantuml.com/sequence-diagram
' - https://www.planttext.com/

-> "Gmail2GDrive()": time-based trigger
activate "Gmail2GDrive()"

"Gmail2GDrive()" -> "processRule()": iterate rules
activate "processRule()"

"processRule()" -> "processRule()": search threads
activate "processRule()"
deactivate "processRule()"

"processRule()" -> "processThread()": iterate threads
activate "processThread()"

"processThread()" -> "processMessage()": iterate messages
activate "processMessage()"

"processMessage()" -> "processAttachment()": iterate attachments
activate "processAttachment()"

"processAttachment()" -> "processAttachment()": getOrCreateFolder()
activate "processAttachment()"
deactivate "processAttachment()"

"processAttachment()" -> "processAttachment()": create file
activate "processAttachment()"
deactivate "processAttachment()"

"processAttachment()" -> "processAttachment()": sleep
activate "processAttachment()"
deactivate "processAttachment()"

"processMessage()" <- "processAttachment()"
deactivate "processAttachment()"

"processThread()" <- "processMessage()"
deactivate "processMessage()"

"processThread()" -> "processThread()": generate PDF
activate "processThread()"
deactivate "processThread()"

"processThread()" -> "processThread()": mark as processed
activate "processThread()"
deactivate "processThread()"

"processThread()" -> "processThread()": archive
activate "processThread()"
deactivate "processThread()"

"processRule()" <- "processThread()"
deactivate "processThread()"

"Gmail2GDrive()" <- "processRule()"
deactivate "processRule()"

<- "Gmail2GDrive()"
deactivate "Gmail2GDrive()"

@enduml
